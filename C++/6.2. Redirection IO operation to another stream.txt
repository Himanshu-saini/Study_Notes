============================================
Redirection I/O operation to another stream 
============================================

Method 1: Redirecting existing FILE pointer

- freopen(<file path>,<mode>,<FILE stream>)
  - used to redirect existing FILE pointer to another stream 
  - Modes:
    - "r" : read mode 
	- "w" : write mode 
	- "a" : append mode
	- "r+" : read and write mode
	- "w+" : read and write mode
	- "a+" : read and append mode

- Example
  -------
  - FILE* fp = fopen("test1.txt","w");
    freopen("test2.txt","w",fp)
	- Now "fp" is used to write in "test2.txt"

- Redirection stdin from file
  ----------------------------
  - freopen("D:\\custom\\path\\sampleFile.txt","r",stdin);
  - Now "cin" can be used to read from file
  
- Redirection stdout from file
  ----------------------------
  - freopen("D:\\custom\\path\\sampleFile.txt","w",stdout);
  - Now "cout" can be used to write in file

Method 2: Change the Stream Buffer
==================================
- All stream objects also have an associated data member 
  of class streambuf.
- streambuf object is the buffer for the stream
- Data is read from a buffer linked to a source while reading
- Similarly, while writing, data is writen in the buffer
  and then buffer is flushed(written) when needed.

- C+= allows us to set the stream buffer 
- So the task of redirecting the stream simply reduces to 
  changing the stream buffer associated with the stream  

- ios::rdbuf()
  - stream_object.rdbuf()
    - Returns pointer to the stream buffer of stream_object
  - stream_object.rdbuf(streambuf * p)
    - Sets the stream buffer to the object pointed by p

- Redirection stdin from file
  ----------------------------
  - fstream readFile;
    readFile.open("sampleFile.txt",ios::in);
	streambuf* stream_buffer_readFile = readFile.rdbuf();
	cin.rdbuf(stream_buffer_readFile);
	
  - Now "cin" can be used to read from file
  
- Redirection stdout from file
  ----------------------------
  - fstream writeFile;
    writeFile.open("sampleFile.txt",ios::out);
	streambuf* stream_buffer_writeFile = writeFile.rdbuf();
	cout.rdbuf(stream_buffer_writeFile);
	
  - Now "cout" can be used to write in file