=================================
Open Addressing / Closed Hashing
=================================

- All keys are stored in Hash Table 
- No linked List 
- Max numbers of keys stored = size of table
- Load Factor,Î± = [0,1]
  - because, N<=S

- Probing 
  --------
  - Finding slot index 
  - can do probing any number of times till we find suitable slot.

- In case of collision,
  a new hash function is used to find new slot (probing)

Linear Probing
==============
- We search hash table sequentially starting from 
  original slot index 
- If the slot is occupied we move to next slot
- hash function = h(key)
  new hash function = h'(key)
  h'(key) = h(h(key)+i) = h(key+i)
  - i : number of collisions

- Problem
  - items tends to form cluster
    - cluster: group of consecutively occupied location
  - thus one part of table is dense whereas other part is empty
  - it causes longer probe searched and decreases efficiency

- Complexity:
  - In worst case,
    - Insertion : O(S)
    - Searching : O(S)
  - Exprerimentally, in case of linear searching
    - Searching : O(2.5) = O(1)

Quadritic Probing 
===================
- Hash function is quadratic 
- h'(key,i) = (h(key) + i^2)%size
  - i : number of collision 

- Disadvantage 
  - Same probe sequence is followed for colliding keys 
  - Does not check every slot before reaching the same index

- Not practically used