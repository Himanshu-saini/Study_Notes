==========================
Django template system
==========================

Using blocks in templates:
============================
- Blocks are the pieces of html code that are include in a html page when extended.
- Only one page can be extended. Multiple include can be done
- Like:
  #index.html
  {% extends base.html %}
  {% block bodycontant %}
  <div> … </div>
  {% endblock bodycontant %}

  #base.html
  <html>
  <head> … </head>
  <body>
  {% include header.html %}      //include whole html file here 
  {% block bodycontant %}       // only the block the blockname will be places here from the extended class
  {% endblock bodycontant %}
  {% include footer.html %}
  </body>
  </html>

Include static file in the page
--------------------------------
- Use {% load static %} 
  for include css,js and images in html using django templates
- <link rel="stylesheet" type="text/css" href="{% static 'home/stylesheets/home-style-sass.scss' %}?{% now 'jS S Y H:i' %}" />
  "?{% now 'jS S Y H:i'" is used to change the css file name to prevent cache file from loading on refreshing the page.

- Use {% load sass_src %} for include scss,sass in html using django templates
  Install and Include sass_processor in INSTALLED_APPS in setting of the project.
  <link rel="stylesheet" type="text/css" href="{% sass_src 'home/stylesheets/home-style-sass.scss' %}?{% now 'jS S Y H:i' %}" />

Accessing variable inside a template:
--------------------------------------
- <h1>{{ question }}</h1>
- The template system uses dot-lookup syntax to access variable attributes.
  {{ question.question_text }}
- Here, Django does a dictionary lookup on the object question. 
  Then  an attribute lookup then a list-index lookup
- Method-calling happens in the {% for %} loop: 
  question.choice_set.all is interpreted as the Python code question.choice_set.all(), 
  which returns an iterable of Choice object
- {{ forloop.counter }}
  forloop.counter indicates how many times the for tag has gone through its loop
