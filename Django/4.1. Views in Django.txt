first view
=============
- Open the file polls/views.py:
  polls/views.py
  --------------
  from django.http import HttpResponse

  def index(request):
    return HttpResponse("Hello, world. You're at the polls index.")\
    or 
	return render(request,”index.html”,{title: “Home page”}) // {} => jinja2 tags
    or 
	return HttpResponseRedirect(“/home”)

Creating Views:
====================
- Using  HttpResponse the page’s design is hard-coded in the view.
- So let’s use Django’s template system to separate the design from Python by creating a template that the view can use.
- create a directory called "templates" in your polls directory.
  By convention DjangoTemplates looks for a “templates” subdirectory in each of the INSTALLED_APPS.
- Within the templates directory you have just created, 
  create another directory called polls, and within that create a file called index.html. 
  you can refer to this template within Django as polls/index.html.
- polls/views.py
  ---------------
  from django.http import HttpResponse
  from django.template import loader
  from .models import Question


  def index(request):
    latest_question_list = Question.objects.order_by('-pub_date')[:5]
    template = loader.get_template('polls/index.html')
    context = {
        'latest_question_list': latest_question_list,
    }
    return HttpResponse(template.render(context, request))

- shortcut: render()¶
  It’s a very common idiom to load a template
  render(request, 'polls/index.html', context)
