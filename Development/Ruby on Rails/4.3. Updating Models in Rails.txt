=========================
Updating Models in Rails
=========================

- Addng a new field in an existing table 
  ---------------------------------------
  $ rails g migration add_<field_name>_to_<table_name> <field_name>:<data_type>[:<options0>]
  $ rails g migration add_user_id_to_friends user_id:integer:index
  - Create a new migration and write add_column command in it

Empty Migartions
=================
- Migrations are used to perform incremental changes to db

- Create migration 
  $ rails g migration <migration_name>
  - <migration_name> standard is to write as <task_to_perform_in_table>
  - Create a new file in db/migrate
  - Write appropriate code in the migration file
  - Push changes in db using 
    $ rake db:migrate

- Do not edit old migration file 
  - Rails do not run old migration code
- Do not change migration class name in migration file 
  - Rails keep track of which migration is not completed using this name

- Add Foreign Key
  ------------------
  def change
    add_foreign_key :forms, :localities
    add_foreign_key :forms, :categories
  end
  
- Change Column type 
  -------------------
  def change
    change_table :forms do |t|
      t.change :locality_id, :bigint
      t.change :category_id, :bigint
    end
  end

- Change Column name 
  -------------------
  def change
    change_table :forms do |t|
      t.rename :locality, :locality_id
      t.rename :category, :category_id
    end
  end


Rake Commandes
===============

- Pushing Migration in DB
  -------------------------
  $  rails db:migrate
  $ rake db:migrate
  - Create 'db/schema.rb' file
  - 'created_at' and 'updated_at' are added to the table by default
  - should only be used for incremental migrations
    - To dot use when changing db

- Re-Create your database
  ---------------------
  - $ rake db:create
    $ rake db:schema:load

- Delete all data from Database
  ------------------------------
  - $ rake db:reset 
  - $ rake db:truncate_all
    - Delete data without droping table

- Rollback Migration 
  -------------------
  - $ rake db:rollback STEP=1
  - $ rake db:migrate VERSION=20100905201547
    - rollback all migartion after specified version
  - $ rake db:migrate:down VERSION=20100905201547
    - rollback one specific migration (out of order)
  - $ rake db:migrate:up VERSION=20100905201547
    - migrate one specific migration (out of order)

- Check migration status
  ----------------------
  - $ rake db:migrate:status

- Push migration in Prod DB
  ------------------------
  - $ rake db:migrate RAILS_ENV=production