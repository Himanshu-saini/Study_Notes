============
DRF Routers
============

- https://www.django-rest-framework.org/api-guide/routers/
- quickly declare all of the common routes for a given resourceful controller.
- Ex.
	from rest_framework import routers

	router = routers.SimpleRouter() 
	router.register(r'users', UserViewSet)
	router.register(r'accounts', AccountViewSet)
	urlpatterns = router.urls
	OR

	api_router.register(r'tag', TagViewSet, 'tag')
	urlpatterns = [
	  url(r'^v1/', include(api_router.urls, namespace='v1'))
	]

- A viewset may mark extra actions for routing by decorating a method with the @action decorator
  - @action(methods=['post'], detail=True, permission_classes=[IsAdminOrIsSelf])

- For a more restrictive (or lenient) lookup pattern, 
  set the lookup_value_regex attribute on the viewset.
- class MyModelViewSet():
  lookup_value_regex = '[0-9a-f]{32}'

- DefaultRouter
  -------------
- Same as SimpleRouter
- additionally includes a default API root view
  that returns a response containing hyperlinks to all the list views
- also generates routes for optional .json style format suffixes

Register the viewset with a router
------------------------
-  default routers provide routes for a standard set of create/retrieve/update/destroy action 


Get the URL of an action
---------------
- use the .reverse_action() method
- This is a convenience wrapper for reverse(), automatically passing the view's 
  request object and prepending the url_name with the .basename attribute.
- Note that the basename is provided by the router during ViewSet registration. 
  If you are not using a router, then you must provide the basename argument to the .as_view() method.

- Ex.
  >>> view.reverse_action('set-password', args=['1'])
  'http://localhost:8000/api/users/1/set_password'


Wothout Router
=========

urlpatterns = [
  path('',view.ProductCreateAPIView.as_view()),
  path('<int:pk>',view.ProductDetailsAPIView.as_view())
]

