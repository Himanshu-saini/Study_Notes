========
Hoisting 
========

- Hoisting was thought up as a general way of thinking about 
  how execution contexts (specifically the creation and 
  execution phases) work in JavaScript.

- strict definition of hoisting suggests that 
  variable and function declarations are physically moved 
  to the top of your code
  but this is not in fact what happens
- variable and function declarations are put into memory 
  during the compile phase, but stay exactly 
  where you typed them in your code.

- Advantages
  -----------
  - it allows you to use a function before you declare it in your code.
  - The variables can be initialized and used before they are declared.
    - JavaScript only hoists declarations, not initializations
	- Ex 
	  console.log(num);  // print undefined, but not ReferenceError
	  var num = 5;
	- Declarations using let and const are also not hoisted. 
	- Ex 
	  console.log(num);  // Throws ReferenceError exception 
	  let num;
	- Variable Hoisting is not done 
	  if there is no varible declaration line only initialization is done.
    - Ex 
	  console.log(num);  // Throws ReferenceError exception 
	  num = 5;  // Variable id declared when initialized but hoisting is not done
