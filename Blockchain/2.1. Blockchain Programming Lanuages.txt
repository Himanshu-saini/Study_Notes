===============================================
Different Languages for Blockchain Programming 
===============================================

- GoLang
  ------
  - statically-typed language
  - syntax somewhat similar to that of C.
  - robust, multi-purpose language
  - compiled language
  - provides a rich standard library
  -  GO is an attempt at combining the syntax and 
    user-friendliness of modern languages such as 
	Python & Javascript, with the performance and 
	security advantages of C.
  - Goroutines
    - run several programs or several parts of a 
	program asynchronously or in parallel,
  - Advantages 
    - Compilation time is fast
	- programs are simple, concise, and safe
	- Super strongly typed, Scalable
	- Garbage collection
	
  - Disadvantages 
    - Not very easy to learn
	- Go do not have many packages
	- community is not that big 
  
  - Usecase
    - Go-Ethereum
	- Hyperledger Fabric

- Solidity
  ---------
  - javascript-like domain-specific, object-oriented, 
    high-level language
  - made by the Ethereum team
  - influenced by C++, Python, and JavaScript
  - designed for creating decentralized apps on the 
    Ethereum platform, Ethereum Virtual Machine (EVM).
  - Advantages 
    - Provides inheritance properties in contracts
	- Easy to learn
  - Disadvantages 
    - community is not big
	- Usage is very complicated due to the 
	  unavailability of Standard Library
    - Not universal; usable in Ethereum ecosystem only

- C++
  ------
  - In C++, a package of data, functions, and objects are created 
    which can easily be called and reused in other programs 
	greatly reducing coding time.
  - C++ gives users complete control over CPU and memory usage
    - used to make fast and secure transaction 
  - move semantics
    - provides a way to move the contents between objects 
	  rather than be copied
    - advantage is you can get copies of certain data only 
	  when you need them giving a huge performance boost 
	  by decreasing code redundancy.
  - C++’s threading ability can handle both parallel and 
    non-parallel tasks
	- multithreading facilities with effective 
	  inter-thread communication
    - optimizes single-thread performance.

  - Disadvantages:
    - garbage collection not supported
    - complex and often difficult to debug

  - C++ is mostly used in cryptocurrencies
    - Bitcoin, Ripple, Bitcoin cash, Litecoin, Stellar, Monero

- C#
  ------
  - build robust applications that run on the .NET Framework 
  - powerful cross platform code that works over 
    multiple operating systems 
  - Stratis 
    - a Blockchain-as-a-Service provider 
	- backed by Microsoft
  - NEO
  
- Javascript
  -----------
  - very good at handling asynchronous actions
  - Disadvantage 
    - Dynamic
	- interpretation depends on the browser
	- anyone can view code
  - use javascript in web3.js and ethereum.js
    - helps you connect your frontend of application 
	  to connect with ethereum network and smart contracts
  - Hyperledger Fabric SDK for node.js
    - framework in javascript 

- Java
  ------

- Python
  ------
  - Advantages
    - Works on different platforms
	- Runs on an interpreter system. 
	  Meaning, prototyping can be very quick.
	- can be run compiled or uncompiled
	  - scripted language that doesn't require compilation 
	    to become understandable to machines
	  - Translating code on the fly can negatively affect 
	    the performance of scripting languages. That's why 
		Python offers the option of pre-compiling the code 
		along with many other techniques that speed it up, 
		giving developers working in Blockchain a choice.
  - Disadvantage 
    - Not so smart context
	- Mostly used as a server language
	- Libraries are not always documented
  - Python is recommended for blockchain if you're trying to 
    address an Internet of Things use case
  - Use case
    - Python is used to write smart contracts for Hyperledger
    - used to create contracts for NEO
    - pyethereum
      - Etherium on python 

- SQL 
  ------
  - programming language developed by IBM
  - communicate with databases that store, query, and manipulate data. 
  - Use case
    - Aergo 
	  — An entreprise-ready blockchain solution
	  - utilizes SQL smart contracts

