=====================
Git commits and logs
=====================

Git Add 
========
- Add files to Staged area
  - $ git add <file name>
  - $ git add .
    - Track all files

Git Commit 
===========
- Commit file (Save changes to our tree)
  - $ git commit -m "MESSAGE"

Git Status
===========
- check the status of each file in your directory 
  - $ git status

Git Diff
========
- $ git diff
  - look at the changes youâ€™ve made to a modified file
- $ git diff --cached
  - If compare files in staged area

Git Log 
=========
- $ git log
  - View detailed commit history 
- $ git log --oneline
  - Commit history in oneline with commit hash
  
Merge 2 or More commits together
================================

** Commits should not be pushed into remote branch 
   otherwise, there will be merge conflict
  
Option 1:
---------
- $ git rebase -i <commitHash>~
  - <commitHash> : hash of commit you want to merge into
  - ~ : tells every commit after this commit 

- Merge all commit after <commitHash> into one  
- In the editor opened
  - use "fixup" or "sqaush" in front of commits you want to merge 
  - fixup : commit message erased
  - sqaush : commit message added into commit message of <commitHash>
- Save and Exit file

Option 2:
----------
- Reset HEAD to old commit and create a new commit with all current changes
- $ git reset --hard HEAD~5
  - git HEAD goes to commit before 5 resent commits i.e. last 6th commit 
- Save all changes done till now
  - $ git add .
  - $ git commit -m "New Commit message"
