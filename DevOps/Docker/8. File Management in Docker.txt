File Storage Management by Docker
========================================
- Docker container have their own separate file storage. 
- Docker stores all its data in foleder : /var/lib/docker

- On deleting the container all the data in its file storage is also deleted.
- To save the data on the machine map the folder on the docker container to a folder in the docker host machine.
  $ docker run –v /opt/datadir: /var/lib/mysql mysql

Copy-on-write: 
==================
- When the docker image is build it becomes read only.
- To make changes to a running instance of container, 
  docker copy the image to the container instance which is read and write, 
  so that we can make changes to an instance.
 -We have to build new image of that container to save the changes otherwise those changes will be deleted when the container stops.

Volumes:
-----------
- Volumes are the storage space created in folder /var/lib/docker/volumes. It is used to mount container instance data to a permanent storage so that the data is not lost.
  $ docker volume create data_volume 	//creates a folder in docker > volumes

Mounting data from container to host machine
=============================================
- Two types of mounting: 
  - volume mount 
  - bind mount

Volume mount 
---------------
- To save the data from the docker container, mount the data storage location in the container to the volume.
- That way, if the container is destroyed data remains in the volume created on the host machine.
- Ex. Docker run –v data_volume:/var/lib/mysql mysql		//volume mounting
- If the volume is the not created, docker will automatically create a new volume.

Bind mount
-----------
- To mount the data in the docker host to the container and not the volume, give complete path to the data storage in place of volume name.
- Ex. $docker run –v /data/mysql:/var/lib/mysql mysql		//bind mounting

New and better way to mount:
------------------------------
- Using –mount and each parameter is provided in key=value format
  $ docker run --mount type=bind,source=/ data/mysql,target=/var/lib/mysql mysql
