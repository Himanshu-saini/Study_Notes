Docker Registry:
==========================
- Docker registry is the storage space where all the docker images is stored.
- Docker save the image in its registry as <user or account name>/<image name>
  $docker run nginx
- Docker pull the image from the docker registry by default. 
- Whenever the account name is not provided, docker take account name same as image name.  
  Therefore, Docker pull the image form nginx/nginx
- User name is the docker hub account name or the organisation name.
- Whenever the location for the image is not provided the docker pull the image from 
  docker default registry i.e. docker hub (docker.io)
- Therefore the complete path of the image become: docker.io/nginx/nginx

Other popular registries:
-----------------------------
- Grc.io   //google registry

Private registry:
=======================
- You can create private registry.
- To access the image (pull or push) from the private registry docker 
  first needs to login in to the private registry account like:
  $ docker login private-registry.io		//input username and password when asked
- On successful login, run the image as
  $ docker run private-registry.io/apps/vote-app

Deploy your own private registry:
===================================
- Docker registry is itself an application which is available as an image with name “registry” with api at port 5000.
  $ docker run –d –p 5000:5000 –name registry registry:2		//running version 2 of registry

- To push the image to the private registry, follow the steps:
  $ docker image tag <image name> <registry url>   	// to tag the image with the url
- Like:  
  $ docker image tag my-image localhost:5000/my-image
- Then push the image to the registry as:
  $ docker push localhost:5000/my-image

- Now we can pull image form anywhere in the private network:
  $docker pull localhost:5000/my-image		//if we are at same host
  $docker pull <IP or domain name>/my-image		// if we are at another machine in the network
