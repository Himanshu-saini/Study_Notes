=====================
Multi-stage Builds
====================
- When working with multi-stage builds, 
  you are building multiple Docker images in a single Dockerfile, 
  but only the last one is the real result.
- The other ones are there to support it. 
- Anything but the final image donâ€™t leave any traces.
- really convenient for handling secrets! 
- You simply provide your private SSH key to one of the intermediate images, 
  use it to install dependencies download the data or clone a Git repository
- pass directories containing that data into your final image build process, 
  while leaving the secret credentials safe and sound in the intermediate image
- Example:
  # this is our first build stage, it will not persist in the final image
  FROM ubuntu as intermediate

  RUN apt-get update
  RUN apt-get install -y git

  # add credentials on build
  ARG SSH_PRIVATE_KEY
  RUN mkdir /root/.ssh/
  RUN echo "${SSH_PRIVATE_KEY}" > /root/.ssh/id_rsa

  # make sure your domain is accepted
  RUN touch /root/.ssh/known_hosts
  RUN ssh-keyscan bitbucket.org >> /root/.ssh/known_hosts

  RUN git clone git@bitbucket.org:your-user/your-repo.git

  # Final docker image
  FROM ubuntu
  # copy the repository form the previous image
  COPY --from=intermediate /your-repo /srv/your-repo
  # ... actually use the repo :)